# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'

user_secrets_json = File.read(ENV['HOME']+'/.vagrant-rightscale.cfg')
user_secrets = JSON.parse(user_secrets_json)

Vagrant.configure("2") do |config|
  config.vm.host_name = "vagrant-rightscale-example"

  config.vm.box = "RightImage_Ubuntu_12.04_x64_v13.5.0.1"
  config.vm.box_url = "https://rightscale-vagrant.s3.amazonaws.com/virtualbox/ubuntu/12.04/RightImage_Ubuntu_12.04_x64_v13.5.0.1.box"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :hostonly, "33.33.33.10"

  # Assign this VM to a bridged network, allowing you to connect directly to a
  # network using the host's network device. This makes the VM appear as another
  # physical device on your network.

  # config.vm.network :bridged

  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  # config.vm.forward_port 3000, 3000

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.

  # Shared folder for the developer_tool.json file. see README.
  config.vm.share_folder "v-data", "/home/webapps", "."

  config.ssh.max_tries = 40
  config.ssh.timeout   = 120

  config.vm.provision :rightscale do |rightscale|

    rightscale.email = user_secrets['email']
    rightscale.password = user_secrets['password']
    rightscale.account_id = user_secrets['account_id']
    rightscale.api_url = user_secrets['api_url'] # default: https://www.rightscale.com

    # rightscale.cloud_name = "BlueSkies"
    rightscale.servertemplate = "PHP App Server (v13.2)"
    rightscale.deployment_name = "Vagrant Deployment Test" #unique name!
    rightscale.server_name = "Vagrant Server Test" #unique name!

    rightscale.server_inputs = {

      # database connection
      "app/database_name" => "text:app_test",
      "db/dns/master/fqdn" => "text:www.mydomain.com",

      # application code respository
      "repo/default/account" => "text:github_user@mail.com",
      "repo/default/credential" => "cred:github_private_key",
      "repo/default/repository" => "text:git://github.com/rightscale/examples.git",
      "repo/default/revision" => "text:unified_php",

      # open up port 8000
      "sys_firewall/rule/enable" => "text:enable",
      "sys_firewall/rule/port" => "text:8000",
      "sys_firewall/rule/ip_address" => "text:any",
      "sys_firewall/rule/protocol" => "text:tcp"
    }

    # scripts to run after boot list is completed
    rightscale.operational_scripts = [
     "sys_firewall::setup_rule"
    ]

  end
end